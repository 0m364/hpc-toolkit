# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

blueprint_name: daos

vars:
  project_id:  ## Set GCP Project ID Here ##
  deployment_name: daos
  region: us-central1
  zone: us-central1-c

# terraform_backend_defaults:
#   type: gcs
#   configuration:
#     bucket: #please specify a GCS bucket for terraform state

deployment_groups:
- group: primary
  modules:
  - source: modules/network/pre-existing-vpc
    kind: terraform
    id: network1

  - source: modules/file-system/filestore
    kind: terraform
    id: homefs
    use: [network1]
    settings:
      local_mount: "/home"

  # This module creates a DAOS server. Server images MUST be created before running this.
  # https://github.com/daos-stack/google-cloud-daos/tree/main/images
  # more info: https://github.com/daos-stack/google-cloud-daos/tree/main/terraform/modules/daos_server
  - source: github.com/daos-stack/google-cloud-daos.git//terraform/modules/daos_server?ref=d1d0f60
    kind: terraform
    id: daos
    use: [network1]
    settings:
      allow_insecure: true #  This allows us to run clients without certificates, which is needed for now.
      pools:
      - pool_name: "test_pool"
        pool_size: "1TB"
        containers:
        - "test_container"

  - source: modules/scripts/startup-script
    kind: terraform
    id: daos-clients
    settings:
      runners:
      - type: shell
        content: $(daos.daos_client_install_script)
        destination: /tmp/install_daos.sh
      - type: data
        content: $(daos.daos_agent_yml)
        destination: /etc/daos/daos_agent.yml
      - type: data
        content: $(daos.daos_control_yml)
        destination: /etc/daos/daos_control.yml
      - type: shell
        content: |
          #!/bin/bash
          set -x
          sleep 300
          ## Setup DAOS agent
          systemctl start daos_agent
          systemctl enable daos_agent
        destination: /tmp/configure-daos.sh

  - source: modules/scripts/startup-script
    kind: terraform
    id: daos-manager
    settings:
      runners:
      - type: shell
        content: $(daos.daos_client_install_script)
        destination: /etc/daos/install_daos.yml
      - type: data
        content: $(daos.daos_agent_yml)
        destination: /etc/daos/daos_agent.yml
      - type: data
        content: $(daos.daos_control_yml)
        destination: /etc/daos/daos_control.yml
      - type: shell
        content: $(daos.daos_config_script)
        destination: /tmp/configure-daos.sh

  ## This debug_partition will work out of the box without requesting additional GCP quota.
  - source: community/modules/compute/SchedMD-slurm-on-gcp-partition
    kind: terraform
    id: debug_partition
    use:
    - network1
    - homefs
    settings:
      partition_name: debug
      max_node_count: 4
      enable_placement: false
      machine_type: n2-standard-2

  # This compute_partition is far more performant than debug_partition but may require requesting GCP quotas first.
  - source: community/modules/compute/SchedMD-slurm-on-gcp-partition
    kind: terraform
    id: compute_partition
    use:
    - network1
    - homefs
    settings:
      partition_name: compute
      max_node_count: 20

  - source: community/modules/scheduler/SchedMD-slurm-on-gcp-controller
    kind: terraform
    id: slurm_controller
    use:
    - network1
    - homefs
    - debug_partition  # debug partition will be default as it is listed first
    - compute_partition
    settings:
      login_node_count: 1
      compute_startup_script: $(daos-clients.startup_script)
      controller_startup_script: $(daos-manager.startup_script)

  - source: community/modules/scheduler/SchedMD-slurm-on-gcp-login-node
    kind: terraform
    id: slurm_login
    use:
    - network1
    - homefs
    - slurm_controller
    settings:
      login_startup_script: $(daos-clients.startup_script)
