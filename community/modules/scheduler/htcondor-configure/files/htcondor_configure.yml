# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Configure HTCondor Role
  become: true
  hosts: localhost
  tasks:
  - name: User must supply HTCondor role
    ansible.builtin.assert:
      that:
      - htcondor_central_manager_ips is defined
      - htcondor_role is defined
      - password_id is defined
      - project_id is defined
  - name: Remove default HTCondor configuration
    ansible.builtin.file:
      name: /etc/condor/config.d/00-htcondor-9.0.config
      state: absent
    notify:
    - Reload HTCondor
  - name: Set HTCondor role
    ansible.builtin.copy:
      dest: /etc/condor/config.d/00-role
      mode: 0644
      content: |
        use role:{{ htcondor_role }}
    notify:
    - Reload HTCondor
  - name: Set HTCondor Central Manager and Trust Domain
    ansible.builtin.copy:
      dest: /etc/condor/config.d/01-central-manager
      mode: 0644
      content: |
        CONDOR_HOST={{ htcondor_central_manager_ips }}
        UID_DOMAIN=c.{{ project_id }}.internal
        TRUST_DOMAIN=c.{{ project_id }}.internal
    notify:
    - Reload HTCondor
  - name: Generate list of Central Managers
    ansible.builtin.set_fact:
      central_manager_list: "{{ htcondor_central_manager_ips | split(',') }}"
  - name: Set HTCondor Central Manager High Availability
    when: htcondor_role == 'get_htcondor_central_manager' and central_manager_list | length > 1
    ansible.builtin.copy:
      dest: /etc/condor/config.d/01-central-manager-high-availability
      mode: 0644
      content: |
        # following https://htcondor.readthedocs.io/en/latest/admin-manual/high-availability.html#high-availability-of-the-central-manager
        CM_LIST = \
          {{ central_manager_list[0] }}:$(SHARED_PORT_PORT), \
          {{ central_manager_list[1] }}:$(SHARED_PORT_PORT)

        HAD_USE_SHARED_PORT = TRUE
        HAD_LIST = $(CM_LIST)

        REPLICATION_USE_SHARED_PORT = TRUE
        REPLICATION_LIST = $(CM_LIST)

        HAD_USE_PRIMARY = TRUE
        HAD_CONTROLLEE = NEGOTIATOR
        MASTER_NEGOTIATOR_CONTROLLER = HAD

        DAEMON_LIST = $(DAEMON_LIST), HAD, REPLICATION
        HAD_USE_REPLICATION = TRUE
        MASTER_HAD_BACKOFF_CONSTANT = 360
    notify:
    - Reload HTCondor
  - name: Configure HTCondor SchedD
    when: htcondor_role == 'get_htcondor_submit'
    block:
    - name: Create SchedD configuration file
      ansible.builtin.copy:
        dest: /etc/condor/config.d/02-schedd
        mode: 0644
        content: |
          SCHEDD_INTERVAL=15
          TRUST_UID_DOMAIN = True
          SUBMIT_ATTRS = RunAsOwner
          RunAsOwner = True
      notify:
      - Reload HTCondor
  - name: Configure HTCondor StartD
    when: htcondor_role == 'get_htcondor_execute'
    block:
    - name: Create StartD configuration file
      ansible.builtin.copy:
        dest: /etc/condor/config.d/02-startd
        mode: 0644
        content: |
          use feature:PartitionableSlot
          use feature:CommonCloudAttributesGoogle("-c created-by")
          TRUST_UID_DOMAIN = True
          STARTER_ALLOW_RUNAS_OWNER = True
      notify:
      - Reload HTCondor
  - name: Set HTCondor credentials
    ansible.builtin.shell: |
      set -e -o pipefail
      export CLOUDSDK_PYTHON=/usr/bin/python
      POOL_PASSWORD=$(gcloud secrets versions access latest --secret={{ password_id }})
      echo -n "$POOL_PASSWORD" | sh -c "condor_store_cred add -c -i -"
      umask 0077
      TRUST_DOMAIN=$(condor_config_val TRUST_DOMAIN)
      condor_token_create -identity condor@$TRUST_DOMAIN > /etc/condor/tokens.d/condor@$TRUST_DOMAIN
    args:
      creates: /etc/condor/passwords.d/POOL
  - name: Start HTCondor
    ansible.builtin.service:
      name: condor
      state: started
      enabled: true
  - name: Inform users
    changed_when: false
    ansible.builtin.shell: |
      set -e -o pipefail
      wall "******* HTCondor system configuration complete ********"
  handlers:
  - name: Reload HTCondor
    ansible.builtin.service:
      name: condor
      state: reloaded
